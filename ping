#!/usr/bin/env perl
# ping - the pong player.  The pong script has to have autoflushing on, it
# seems.  By Zaba.  It's in public domain as well.  What did you expect?
use strict;
use warnings;
use IPC::Open2;
use Time::HiRes qw|sleep|;
use Getopt::Std;

$| = 1;

sub qrev
{
	my $str = shift;
	my $ret = reverse($str);
	my $len = length($ret);
	my $mistake = 0; # TODO Calculate this properly.

	for (my $i = 0; $i < $len; ++$i)
	{
		if (rand(1) < $mistake) # XXX
		{
			substr($ret, $i) ++; # XXX Make proper mistakes.
		}
	}

	return $ret;
}

my %opts;
getopts('vd:', \%opts);
my $pong = shift // './pong';

my ($pong_in, $pong_out, $input, $reversed);
my $count = 0;
my $pid = open2($pong_out, $pong_in, $pong);
print "Pong running - PID $pid\n\n";

$SIG{INT} = $SIG{TERM} = sub { print "\e[`Final count: $count\n" };

while ($input = <$pong_out>)
{
	chomp $input;
	if ($input =~ m/^|/)
	{
		++$count;
		$reversed = qrev($input);
		print $pong_in $reversed, "\n";

		# If we've no -v, just print the count.
		unless ($opts{v})
		{
			print "\e[`$count";
		}

		# If we have a delay, sleep it now.
		if ($opts{d})
		{
			sleep $opts{d};
		}

		# If we're given -v, print some more prettiness.
		if ($opts{v}) {
			print $input, "\n";
			print $reversed, "\n";
		}
	} else {
		print "$input\n";
		exit 1;
	}
}

